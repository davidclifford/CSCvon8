<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
  <component name="SVCompilerDirectivesDefines">
    <option name="define">
      <map>
        <entry key="ASSIGN_PACK">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="424" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="PK_WIDTH" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="PK_LEN" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="UNPK_SRC" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="PK_DEST" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="wire [PK_WIDTH*PK_LEN-1:0] PK_OUT_BUS; assign PK_DEST=PK_OUT_BUS; genvar pk_idx; generate for (pk_idx=0; pk_idx&lt;PK_LEN; pk_idx=pk_idx+1) begin assign PK_OUT_BUS[PK_WIDTH*pk_idx+:PK_WIDTH]=UNPK_SRC[pk_idx][PK_WIDTH-1:0]; end endgenerate" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="ASSIGN_UNPACK">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="117" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="PK_WIDTH" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="PK_LEN" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="UNPK_DEST" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="PK_SRC" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="wire [PK_WIDTH*PK_LEN-1:0] PK_IN_BUS; assign PK_IN_BUS=PK_SRC; genvar unpk_idx; generate for (unpk_idx=0; unpk_idx&lt;PK_LEN; unpk_idx=unpk_idx+1) begin assign UNPK_DEST[unpk_idx][PK_WIDTH-1:0]=PK_IN_BUS[PK_WIDTH*unpk_idx+:PK_WIDTH]; end endgenerate" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="CASE_TBASSERT_2R_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="2192" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="TBASSERT_2_TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="task TB_NAME(input caseCondition, input condition, input [512:0] s, input [512:0] minor, input integer major); if (caseCondition) TBASSERT_2_TB_NAME(condition, s, minor, major); endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="CASE_TBASSERT_2_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="1497" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                        <Parameter>
                          <option name="name" value="TBASSERT_2_TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="task TB_NAME(input caseCondition, input condition, input [512:0] s, input integer minor, input [512:0] major); if (caseCondition) TBASSERT_2_TB_NAME(condition, s, minor, major); endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="TBASSERT_2R_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="1744" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="reg [512:0] tbassert2RLastPassed = &quot;&quot;, fR; task TB_NAME(input condition, input [512:0] s, input [512:0] minor, input integer major); $sformat(fR, &quot;%0s %0s-%0d&quot;, s, minor, major); if (condition === 1'bx) $display(&quot;-Failed === x value: %-s&quot;, fR); else if (condition == 0) $display(&quot;-Failed: %-s&quot;, fR); else if (fR != tbassert2RLastPassed) begin $display(&quot;Passed: %-s&quot;, fR); tbassert2RLastPassed = fR; end endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="TBASSERT_2_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="1060" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="reg [512:0] tbassert2LastPassed = &quot;&quot;, f; task TB_NAME(input condition, input [512:0] s, input integer minor, input [512:0] major); $sformat(f, &quot;%0s %0d-%0s&quot;, s, minor, major); if (condition === 1'bx) $display(&quot;-Failed === x value: %-s&quot;, f); else if (condition == 0) $display(&quot;-Failed: %-s&quot;, f); else if (f != tbassert2LastPassed) begin $display(&quot;Passed: %-s&quot;, f); tbassert2LastPassed = f; end endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="TBASSERT_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="718" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="reg [512:0] tbassertLastPassed = &quot;&quot;; task TB_NAME(input condition, input [512:0] s); if (condition === 1'bx) $display(&quot;-Failed === x value: %-s&quot;, s); else if (condition == 0) $display(&quot;-Failed: %-s&quot;, s); else if (s != tbassertLastPassed) begin $display(&quot;Passed: %-s&quot;, s); tbassertLastPassed = s; end endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
        <entry key="TBCLK_WAIT_TICK_METHOD">
          <value>
            <Define>
              <option name="definitions">
                <list>
                  <Body>
                    <option name="offset" value="2440" />
                    <option name="parameters">
                      <list>
                        <Parameter>
                          <option name="name" value="TB_NAME" />
                        </Parameter>
                      </list>
                    </option>
                    <option name="replacementList" value="task TB_NAME; repeat (1) @(posedge Clk); endtask" />
                    <option name="source" value="tbhelper.v" />
                  </Body>
                </list>
              </option>
            </Define>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>